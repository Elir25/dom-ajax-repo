!(function(e) {
  "use strict";
  e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function() {
    if (
      location.pathname.replace(/^\//, "") ==
        this.pathname.replace(/^\//, "") &&
      location.hostname == this.hostname
    ) {
      var t = e(this.hash);
      if ((t = t.length ? t : e("[name=" + this.hash.slice(1) + "]")).length)
        return (
          e("html, body").animate(
            { scrollTop: t.offset().top },
            1e3,
            "easeInOutExpo"
          ),
          !1
        );
    }
  }),
    e(".js-scroll-trigger").click(function() {
      e(".navbar-collapse").collapse("hide");
    }),
    e("body").scrollspy({ target: "#sideNav" });
})(jQuery);

//parte 1, add the event listener
/*document
  .querySelector(".nav-link.js-scroll-trigger")
  .addEventListener("click", getLisaRepos);

function getLisaRepos(repoName) {
  let ulElement = document.querySelector("#repos-list"); //get the ul Element

  fetch(`https://api.github.com/users/${repoName}/repos`)
    .then(response => response.json())
    .then(repos => {
      return repos.forEach(rep => {
        const myLiElement = document.createElement("li"); //new li element
        //const myText = document.createElement("p");
        //myText.innerText = rep; codigo solo con los nombres de los repos

        const url = rep.html_url; //tratando de hacerlos links

        const a = document.createElement("a");
        a.setAttribute("href", url);

        let linkText = document.createTextNode(rep.name);

        ulElement.appendChild(myLiElement);
        myLiElement.appendChild(a);
        a.appendChild(linkText);

        //ulElement.appendChild(myLiElement);
        //myLiElement.appendChild(myText);
      });
    });
}
const myRepos = getLisaRepos("Elir25");*/
